generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String  @id
  email         String?
  emailVerified Boolean @default(false)
  passwordHash  String?

  sessions             Session[]
  verificationCodes    VerificationCode[]
  verificationAttempts VerificationAttempt[]
  passwordResetTokens  PasswordResetToken[]
  OAuthAccount         OAuthAccount[]
}

model OAuthAccount {
  providerId     String
  providerUserId String
  userId         String

  user User @relation(fields: [userId], references: [id])

  @@id([providerId, providerUserId])
}

model Session {
  id           String   @id
  expiresAt    DateTime
  userId       String
  ipAddress    String?
  userVerified Boolean  @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationCode {
  id        Int      @id @default(autoincrement())
  userId    String
  email     String
  code      String
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationAttempt {
  id          Int      @id @default(autoincrement())
  userId      String
  ipAddress   String?
  attemptTime DateTime
  type        String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  tokenHash String   @id
  userId    String
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
